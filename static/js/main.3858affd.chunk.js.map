{"version":3,"sources":["components/common/project.jsx","components/assets/img/website.jpg","components/assets/img/weatherdrobeBG.png","components/assets/img/home2.jpg","components/assets/img/arrow.png","components/assets/img/icons/github.png","components/assets/img/thumbnail.jpg","components/assets/img/icons/gmail.png","components/common/header.jsx","components/Pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Project","className","style","backgroundColor","this","props","colorBG","title","technology","description","href","githubLink","target","isGithub","src","githubIcon","hight","width","alt","Component","Header","position","gmailIcon","Thumbnail","height","projects","image","weatherdrobeBG","boruciaBG","websiteBG","Home","state","projectNumber","changeProjectNumber","number","length","setState","onClick","arrow","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3858affd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Project extends Component {\r\n    render() {\r\n        return (\r\n            <header className='masthead' style={{backgroundColor: this.props.colorBG}}>\r\n                <div className='container'>\r\n                    <div className='intro-text'>\r\n                        <div className='flex-row'>\r\n                            <div className='flex-column'>\r\n                                <div className='intro-heading'>{this.props.title}</div>\r\n                                <div className='intro-subtitle'>Technologie: <span className='subtitle-text'>{this.props.technology}</span></div>\r\n                                <div className='intro-lead-in'>{this.props.description}</div>\r\n                                <a className='' href={this.props.githubLink} target='_blank'>\r\n                                    {this.props.isGithub && <img className='icon'src={this.props.githubIcon} hight='80' width='80' alt='Github'/>}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Project;\r\n/*style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${this.props.image})` }}*/","export default __webpack_public_path__ + \"static/media/website.36f6bd35.jpg\";","export default __webpack_public_path__ + \"static/media/weatherdrobeBG.f3e0e8e0.png\";","export default __webpack_public_path__ + \"static/media/home2.2b427d7c.jpg\";","export default __webpack_public_path__ + \"static/media/arrow.b4b9fc63.png\";","export default __webpack_public_path__ + \"static/media/github.02048c82.png\";","export default __webpack_public_path__ + \"static/media/thumbnail.89f4da98.jpg\";","export default __webpack_public_path__ + \"static/media/gmail.5252fe2a.png\";","import React, {Component} from 'react';\r\nimport '../css/header.css';\r\nimport Thumbnail from '../assets/img/thumbnail.jpg';\r\nimport githubIcon from '../assets/img/icons/github.png';\r\nimport gmailIcon from '../assets/img/icons/gmail.png';\r\nclass Header extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <header className='main-component' target='_blank' style={{position:'relative'}}>\r\n                <a href='mailto:1bozek.patryk@gmail.com'>\r\n                    <img className='icon'src={gmailIcon} hight='80' width='80' alt='Github'/>\r\n                </a>\r\n                <div className='main-thread'>\r\n                    <div className='title'>Portfolio</div>\r\n                    <img className='thumbnail' src={Thumbnail} width='244' height='244' alt='Thumbnail'/>\r\n                    <div className='subtitle'>Patryk Bożek</div>\r\n                </div>\r\n                <a href='https://github.com/ItsMeLucifer' target='_blank'>\r\n                    <img className='icon'src={githubIcon} hight='80' width='80' alt='Github'/>\r\n                </a>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FullPage, Slide } from 'react-full-page';\r\n\r\nimport Project from '../common/project';\r\nimport websiteBG from '../assets/img/website.jpg';\r\nimport weatherdrobeBG from '../assets/img/weatherdrobeBG.png';\r\nimport boruciaBG from '../assets/img/home2.jpg';\r\nimport arrow from '../assets/img/arrow.png';\r\nimport githubIcon from '../assets/img/icons/github.png';\r\nimport Header from '../common/header';\r\n\r\nconst projects=[\r\n    {\r\n        title:'WeatherDrobe',\r\n        technology: 'Flutter, Firebase',\r\n        description:'Aplikacja proponująca ubiór na podstawie warunków pogodowych. W programie, korzystając z wzorca projektowego Model View View Model oraz frameworka riverpod, użytkownik na podstawie danych ściąganych z API open.weather.com dostaje informację zwrotną w formie modelu postaci ubranego w wyselekcjonowane przez algorytm ubrania. W WeatherDrobe to użytkownik dodaje do \"Wirtualnej Szafy\" własne ubrania, ustalając jednocześnie na jakie warunki pogodowe dane ubranie jest najbardziej odpowiednie według niego - dzięki takiemu rozwiązaniu praca algorytmu dobierającego ubrania jest jeszcze skuteczniejsza. Dodatkowo aplikacja wykorzystuje bazę danych w chmurze Cloud Firestore dostępną w ramach technologii Firebase od firmy Google, dzięki czemu dodane przez użytkownika ubrania będą dostępne również na innych urządzeniach. ',\r\n        image:weatherdrobeBG,\r\n        githubLink: 'https://github.com/ItsMeLucifer/weatherdrobe.git',\r\n        isGithub: true,\r\n        colorBG:'#008080'\r\n    },\r\n    {\r\n        title:'Borucia Zagłada',\r\n        description: 'Gra w klimatach horrorowych zachaczająca o gatunki tower-defence, survival, rogue-like oraz top-down shooter. Cała zabawa polega na pokonywaniu z przyjaciółmi kolejnych poziomów za pomocą zestrzeliwania hord zombie. Poziom trudności rozgrywki rośnie wraz z każdą kolejną rundą, a postacie można ulepszać za pomocą punktów umiejętności oraz dzięki nowym broniom, które odblokowujemy wraz z nowymi poziomami postaci. Jednakże wszelkie ulepszenia są jedynie dostępne na czas jednej gry. Po zakończeniu rozgrywki można rozpocząć ją od początku z podstawowymi statystykami. W Boruciej Zagładzie wykorzystany został algorytm A* pathfinding, dzięki czemu hordy potworów będą rzucać się na nas najbardziej optymalną trasą. Całość została okraszona możliwością wspólnej gry sieciowej dzięki specjalnemu frameworkowi do Unity - Photonowi, który to umożliwia w szybki i prosty sposób na przesył danych znajdujących się na ekranach graczy.',\r\n        technology: 'Unity, Photon',\r\n        image:boruciaBG,\r\n        isGithub: false,\r\n        colorBG:'#DC602E'\r\n    },\r\n    {\r\n        title:'Web Portfolio',\r\n        description: 'Strona internetowa wykorzystująca framework do języka JavaScript - React. Jest to technologia stworzona przez firmę Facebook, dzięki której tworzenie stron i aplikacji internetowych staje się zdecydowanie szybsze i proste, a responsywność nie jest czymś trudnym do osiągnięcia. Wykorzystując Reacta wraz z CSS powstała aktualna strona ;)',\r\n        technology: 'React',\r\n        image:websiteBG,\r\n        isGithub: false,\r\n        colorBG:'#9D69A3'\r\n    }\r\n]\r\nclass Home extends Component {\r\n\r\n    state={\r\n        projectNumber: 0\r\n    }\r\n    changeProjectNumber=(number)=>{\r\n            if(this.state.projectNumber+number<projects.length && this.state.projectNumber+number>-1){\r\n                this.setState({projectNumber: this.state.projectNumber+number});\r\n            }\r\n            if(this.state.projectNumber+number>=projects.length){\r\n                this.setState({projectNumber: 0});\r\n            }\r\n            if(this.state.projectNumber+number<=-1){\r\n                this.setState({projectNumber: projects.length-1});\r\n            }\r\n    }\r\n    render() {\r\n        return (\r\n            <FullPage>\r\n                <Slide><Header/></Slide>\r\n                <Slide><div style={{position: 'relative'}}>\r\n                    <Project\r\n                        {...projects[this.state.projectNumber]} githubIcon={githubIcon}\r\n                    />\r\n                    <div className='btn-x1 btn-primary disable-text-selection' onClick={()=>{this.changeProjectNumber(1)}}>\r\n                        <img className='arrow' src={arrow} alt=\"arrow\" width='50' height='50' />\r\n                    </div>\r\n                    <div className='btn-x2 btn-primary disable-text-selection' onClick={()=>{this.changeProjectNumber(-1)}}>\r\n                        <img className='arrow left' src={arrow} alt=\"arrow\" width='50' height='50' />\r\n                    </div>\r\n                </div></Slide>\r\n            </FullPage>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport './App.css';\nimport Home from './components/Pages/Home';\nfunction App() {\n  return (\n    <Router>\n        <Route\n          path='/'\n          component={Home}\n        />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}